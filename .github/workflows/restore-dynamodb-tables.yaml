name: Restore to latest backup for dynamodb tables
on:
  workflow_dispatch:
    inputs:
      tables:
        description: 'Space separated ids of tables to restore backup for, just write all to back up all tables'
        required: false
        default: ''
env:
  region: 'eu-west-1'

jobs:
  restore-tables-backups:
    name: Restore to latest backup for dynamodb tables
    runs-on: ubuntu-20.04
    env:
      TABLES: ${{ github.event.inputs.tables }}
    steps:
      - id: set-up-creds
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.region }}

      - id: restore-tables-backups
        name: Restore to latest backup for dynamodb tables
        run: |-
          if [[ "$TABLES" == "all" ]]; then
            tables_to_restore=($(aws dynamodb list-tables | jq -r '.TableNames | .[]' | tr '\r\n' ' '))
          else
            tables_to_restore=(`echo ${TABLES}`)
          fi

          echo "Running restore over $tables_to_restore"

          for table in $tables_to_restore
            do
              backups=($(aws dynamodb list-backups --table-name $table | jq -r '.BackupSummaries | .[] | "\(.BackupCreationDateTime)::\(.BackupArn)" '))
              echo "Found backups are: $backups"

              younger_backup_time=0
              younger_backup_arn=""
              for backup_properties in ${backups[@]}; do
                backup_time=${backup_properties%%::*}
                backup_arn=${backup_properties#*::}

                (( backup_time > younger_backup_time )) && younger_backup_time=$backup_time && younger_backup_arn=$backup_arn
              done

              echo "Restoring from backup $younger_backup_arn"

              if test -z "$younger_backup_arn"; then
                echo "Deleting $table"

                aws dynamodb wait table-not-exists --table-name $table
                echo "Restoring from $younger_backup_arn"
                aws dynamodb restore-table-from-backup --target-table-name $table --backup-arn $younger_backup_arn
              else
                echo "No backup found for table $table"
              fi
          done
