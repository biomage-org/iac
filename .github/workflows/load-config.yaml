name: Load Deployment Config

on:
  workflow_dispatch:
    inputs:
      environment:
        type: string
        description: "Environment for validation (leave blank to skip validation)"
        required: false

  workflow_call:
    inputs:
      environment:
        type: string
        description: "Environment for validation (leave blank to skip validation)"
        required: false
    outputs:
      environment_names:
        description: "The names of all environments"
        value: ${{ jobs.setup.outputs.environment_names }}
      image_account_id:
        description: "Account ID that the docker images are stored in"
        value: ${{ jobs.setup.outputs.image_account_id }}
      image_account_region:
        description: "Account region that the docker images are stored in"
        value: ${{ jobs.setup.outputs.image_account_region }}
      deployment_matrix:
        description: "All allowed combinations of environment name and environment type"
        value: ${{ jobs.setup.outputs.matrix }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image_account_id: ${{ steps.load_variables.outputs.image_account_id }}
      environment_names: ${{ steps.load_variables.outputs.environment_names }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with: ###########  REMOVE THIS WHEN MERGING IN MASTER
        ref: hms-merge #####################################

    - name: Load variables
      id: load_variables
      run: |
        CONFIG_FILE=$(cat deployment-config.json | jq .)

        ENVIRONMENT_NAMES=    $(echo $CONFIG_FILE | jq -r --arg org "${{ github.repository_owner }}" '.[$org].environment_names | join(",")')
        IMAGE_ACCOUNT_ID=     $(echo $CONFIG_FILE | jq -r --arg org "${{ github.repository_owner }}" '.[$org].docker_image_account.id')
        IMAGE_ACCOUNT_REGION= $(echo $CONFIG_FILE | jq -r --arg org "${{ github.repository_owner }}" '.[$org].docker_image_account.region')

        echo "environment_names=$ENVIRONMENT_NAMES" >> $GITHUB_OUTPUT
        echo "environment_names=$ENVIRONMENT_NAMES"
        echo "image_account_id=$IMAGE_ACCOUNT_ID" >> $GITHUB_OUTPUT
        echo "image_account_id=$IMAGE_ACCOUNT_ID"
        echo "image_account_region=$IMAGE_ACCOUNT_REGION" >> $GITHUB_OUTPUT
        echo "image_account_region=$IMAGE_ACCOUNT_REGION"

    - name: Generate deployment matrix
      id: generate_deployment_matrix
      run: |
        MATRIX=$(jq -r '
        [
          to_entries[] |
          .value.deployment_environments |
          to_entries[] |
          {
            environment_name: .key,
            environment_type: .value[]
          }
        ]' config.json)
        echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT
      shell: bash

  validate-environment-name:
    name: Validate selected option
    needs: setup
    if: ${{ github.event.inputs.environment != '' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with: ###########  REMOVE THIS WHEN MERGING IN MASTER
          ref: hms-merge #####################################
      - name: Validate input against config
        run: |
          IFS=',' read -ra valid_options <<< "${{ needs.setup.outputs.environment_names }}"
          for i in "${valid_options[@]}"; do
            if [[ "${{ github.event.inputs.environment }}" == "$i" ]] || [[ "${{ github.event.inputs.environment }}" == "all" ]]; then
              echo "Valid option selected"
              exit 0
            fi
          done
          echo "Invalid option selected"
          exit 1